image: docker:git

stages:
  - test
  - build
  - e2e-test
  - publish

before_script:
  - export DOCKER_REPOSITORY="mendersoftware/gui"
  - export DOCKER_TAG=${CI_COMMIT_REF_SLUG:-master}
  - export SERVICE_IMAGE=$DOCKER_REPOSITORY:$DOCKER_TAG
  - export COMMIT_TAG="$CI_COMMIT_REF_SLUG"_"$CI_COMMIT_SHA";
  - export GIT_REF=${CI_COMMIT_REF_NAME}
  - export GIT_COMMIT=${CI_COMMIT_SHORT_SHA}

build:
  stage: build
  services:
    - docker:19.03.5-dind
  script:
    - echo "building gui for ${SERVICE_IMAGE}"
    - docker build
      --build-arg GIT_REF=${GIT_REF}
      --build-arg GIT_COMMIT=${GIT_COMMIT}
      -t $SERVICE_IMAGE
      .
    - docker save $SERVICE_IMAGE > image.tar
  artifacts:
    expire_in: 2w
    paths:
      - image.tar
  tags:
    - docker

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-commits.yml'

test:lint:
  stage: test
  image: node:12.14.0-alpine
  script:
    - npm ci
    - npm run lint
  except:
    - master

test:acceptance:
  image: tiangolo/docker-with-compose
  dependencies:
    - build
  services:
    - docker:18-dind
  stage: e2e-test
  script:
    - docker load -i image.tar
    - docker tag $SERVICE_IMAGE $DOCKER_REPOSITORY:pr
    - apk add --no-cache git bash
    - git clone --single-branch https://github.com/mendersoftware/integration.git
    - GUI_REPOSITORY=$(pwd) INTEGRATION_PATH=$(pwd)/integration ./tests/e2e_tests/run
    - docker rmi $DOCKER_REPOSITORY:pr
  artifacts:
    expire_in: 2w
    paths:
      - tests/e2e_tests/cypress/screenshots
  tags:
    - mender-qa-slave

test:unit:
  image: node:12.14.0-alpine
  stage: test
  script:
    - npm install
    - npm run test
  artifacts:
    expire_in: 2w
    paths:
      - coverage

publish:tests:
  image: node:12.14.0-alpine
  dependencies:
    - test:unit
  stage: publish
  before_script:
    - npm install -g codecov
  script:
    - codecov

publish:image:
  stage: publish
  services:
    - docker:19.03.5-dind
  dependencies:
    - build
  script:
    - docker load -i image.tar
    - docker tag $SERVICE_IMAGE $DOCKER_REPOSITORY:$COMMIT_TAG
    - docker tag $SERVICE_IMAGE $DOCKER_REPOSITORY:$CI_COMMIT_REF_SLUG
    - echo -n $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin
    - docker push $DOCKER_REPOSITORY:$COMMIT_TAG
    - docker push $SERVICE_IMAGE
  only:
    - /^(master|[0-9]+\.[0-9]+\.x)$/
  tags:
    - docker

publish:disclaimer:
  stage: publish
  services:
    - docker:19.03.5-dind
  script:
    - docker build -f Dockerfile.disclaimer -t disclaimer .
    - docker run --rm --entrypoint "/bin/sh" -v $(pwd):/extract disclaimer -c "cp disclaimer.txt /extract/"
    - docker image rm disclaimer
  artifacts:
    expire_in: 2w
    paths:
      - disclaimer.txt
  only:
    - /^(master|[0-9]+\.[0-9]+\.x)$/
