image: node:14.7.0-alpine

stages:
  - test
  - build
  - e2e-test
  - publish

variables:
  DOCKER_REPOSITORY: mendersoftware/gui
  DOCS_VERSION: development
  HUSKY_SKIP_INSTALL: 1

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-commits.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-docker-build.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'

test:lint:
  stage: test
  except:
    - master
    - /^saas-[a-zA-Z0-9.]+$/
  script:
    - npm ci
    - npm run lint

test:acceptance:
  stage: e2e-test
  except:
    - /^saas-[a-zA-Z0-9.]+$/
  image: tiangolo/docker-with-compose
  dependencies:
    - build:docker
  services:
    - docker:19.03.5-dind
  before_script:
    - export DOCKER_TAG=${CI_COMMIT_REF_SLUG:-master}
    - export SERVICE_IMAGE=${DOCKER_REPOSITORY}:${DOCKER_TAG}
  script:
    - docker load -i image.tar
    - docker tag $SERVICE_IMAGE $DOCKER_REPOSITORY:pr
    - apk add --no-cache git bash
    - git clone --single-branch https://github.com/mendersoftware/integration.git
    - GUI_REPOSITORY=$(pwd) INTEGRATION_PATH=$(pwd)/integration ./tests/e2e_tests/run
    - docker rmi $DOCKER_REPOSITORY:pr
  artifacts:
    expire_in: 2w
    paths:
      - screenshots
      - logs
    when: on_failure

test:unit:
  stage: test
  except:
    - /^saas-[a-zA-Z0-9.]+$/
  script:
    - npm install
    - npm run test
  artifacts:
    expire_in: 2w
    paths:
      - coverage

test:docs-links:
  stage: test
  except:
    - /^(staging|saas-[a-zA-Z0-9.]+)$/
  before_script:
    - apk add --no-cache curl
  script:
    - links=$(grep -r docs.mender.io src/ | grep -v snapshots | sed -e 's,\${docsVersion},'${DOCS_VERSION}'/,g' | egrep -o 'https?://[^ `]+' | sort | uniq)
    - error=0
    - for url in $links; do
    - if ! curl --output /dev/null --silent --head --fail $url; then
    - error=1
    - echo "[ko] $url"
    - else
    - echo "[ok] $url"
    - fi
    - done
    - if [ $error -gt 0 ]; then
    - exit 1
    - fi

test:docs-links:hosted:
  extends: test:docs-links
  only:
    - /^(staging|saas-[a-zA-Z0-9.]+)$/
  except: []
  variables:
    DOCS_VERSION: hosted

publish:tests:
  stage: publish
  except:
    - /^saas-[a-zA-Z0-9.]+$/
  dependencies:
    - test:unit
  script:
    - npx codecov

publish:disclaimer:
  stage: publish
  image: docker:git
  services:
    - docker:19.03.5-dind
  script:
    - docker build -f Dockerfile.disclaimer -t disclaimer .
    - docker run --rm --entrypoint "/bin/sh" -v $(pwd):/extract disclaimer -c "cp disclaimer.txt /extract/"
    - docker image rm disclaimer
  artifacts:
    expire_in: 2w
    paths:
      - disclaimer.txt
  only:
    - /^(master|staging|[0-9]+\.[0-9]+\.x)$/
