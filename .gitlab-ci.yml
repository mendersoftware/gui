image: node:18-alpine

stages:
  - pre-test
  - test
  - build
  - e2e-test
  - publish

variables:
  DOCKER_REPOSITORY: mendersoftware/gui
  DOCS_VERSION: development

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-commits.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-docker-build.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'

test:lint:
  stage: test
  except:
    - master
    - /^(staging|saas-[a-zA-Z0-9.]+)$/
  needs: []
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm/
  script:
    - npm ci --cache .npm --prefer-offline
    - npm run lint

.template:test:acceptance:
  stage: e2e-test
  image: tiangolo/docker-with-compose
  needs:
    - job: build:docker
      artifacts: true
  services:
    - docker:19.03.5-dind
  before_script:
    - export DOCKER_TAG=${CI_COMMIT_REF_SLUG:-master}
    - export SERVICE_IMAGE=${DOCKER_REPOSITORY}:${DOCKER_TAG}
    - apk add --no-cache bash git jq wget
  artifacts:
    expire_in: 2w
    paths:
      - coverage
      - screenshots
      - logs
      - junit
    reports:
      junit:
        - junit/results.xml
    when: always

test:acceptance:
  extends: .template:test:acceptance
  except:
    - /^(staging|saas-[a-zA-Z0-9.]+)$/
  script:
    - docker load -i image.tar
    - docker tag $SERVICE_IMAGE $DOCKER_REPOSITORY:pr
    - git clone --no-tags --depth=1 --single-branch https://github.com/mendersoftware/integration.git
    - GUI_REPOSITORY=$(pwd) INTEGRATION_PATH=$(pwd)/integration ./tests/e2e_tests/run
    - docker rmi $DOCKER_REPOSITORY:pr

test:acceptance:enterprise:
  extends: .template:test:acceptance
  only:
    - master
  variables:
    TEST_ENVIRONMENT: enterprise
  script:
    - if [ -n "$REGISTRY_MENDER_IO_USERNAME" ]; then
    - docker login -u $REGISTRY_MENDER_IO_USERNAME -p $REGISTRY_MENDER_IO_PASSWORD registry.mender.io
    - fi
    - docker load -i image.tar
    - docker tag $SERVICE_IMAGE $DOCKER_REPOSITORY:pr
    - git clone --no-tags --depth=1 --single-branch https://github.com/mendersoftware/integration.git
    - GUI_REPOSITORY=$(pwd) INTEGRATION_PATH=$(pwd)/integration ./tests/e2e_tests/run --enterprise
    - docker rmi $DOCKER_REPOSITORY:pr

test:unit:
  stage: test
  image: node:14-alpine
  except:
    - /^(staging|saas-[a-zA-Z0-9.]+)$/
  needs: []
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm/
  script:
    - npm i -g npm
    - npm ci --cache .npm --prefer-offline
    - npm run test -- --ci --maxWorkers=2 --reporters=default --reporters=jest-junit
  after_script:
    - mkdir logs && cp .npm/_logs/* logs/
  artifacts:
    expire_in: 2w
    paths:
      - coverage
      - logs
    reports:
      junit: junit.xml
    when: always
  tags:
    - mender-qa-slave-highcpu

test:docs-links:
  stage: test
  needs: []
  except:
    - /^(staging|saas-[a-zA-Z0-9.]+)$/
  before_script:
    - apk add --no-cache curl
  script:
    - links=$(grep -r docs.mender.io src/ | grep -v snapshots | sed -e 's,\${docsVersion},'${DOCS_VERSION}'/,g' | sed -e 's,\${path},''/,g' | egrep -o 'https?://[^ `]+' | sort | uniq)
    - error=0
    - for url in $links; do
    - if ! curl --output /dev/null --silent --head --fail $url; then
    - error=1
    - echo "[ko] $url"
    - else
    - echo "[ok] $url"
    - fi
    - done
    - if [ $error -gt 0 ]; then
    - exit 1
    - fi

test:docs-links:hosted:
  extends: test:docs-links
  only:
    - /^(staging|saas-[a-zA-Z0-9.]+)$/
  except: []
  variables:
    DOCS_VERSION: hosted

test:prep:
  stage: pre-test
  image: docker
  services:
    - docker:19.03.5-dind
  script:
    - docker run --rm --entrypoint "/bin/sh" -v $(pwd):/extract mendersoftware/mender-stress-test-client:master -c "cp mender-stress-test-client /extract/"
  artifacts:
    paths:
      - mender-stress-test-client
    expire_in: 30 days

.template:test:staging-deployment:
  image: mendersoftware/mender-test-containers:gui-e2e-testing
  stage: .post
  services:
    - docker:19.03.5-dind
  cache:
    key:
      files:
        - tests/e2e_tests/package-lock.json
    paths:
      - .npm/
  dependencies:
    - test:prep
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375/
    CI: 1
    DEVICE_TYPE: qemux86-64
    TEST_ENVIRONMENT: staging
  before_script:
    - curl -fsSL https://get.docker.com | sh
    - mv mender-stress-test-client tests/e2e_tests/ && cd tests/e2e_tests
    - mv /e2e/mender-demo-artifact.mender .
    - docker pull mendersoftware/mender-client-docker-addons:master
    - npm ci --cache .npm --prefer-offline
  script:
    - npm run test-ci
  after_script:
    - cd $CI_PROJECT_DIR
    - mkdir logs && cp /root/.npm/_logs/* logs/
  artifacts:
    expire_in: 2w
    paths:
      - tests/e2e_tests/test-results
      - logs
    when: always

test:staging-deployment:chrome:
  extends: .template:test:staging-deployment
  variables:
    TEST_SAML_CREDENTIALS: "chrome"
  script:
    - npm run test-ci

test:staging-deployment:firefox:
  extends: .template:test:staging-deployment
  variables:
    TEST_SAML_CREDENTIALS: "firefox"
  script:
    - npm run test-ci -- --browser=firefox

test:staging-deployment:webkit:
  extends: .template:test:staging-deployment
  variables:
    TEST_SAML_CREDENTIALS: "webkit"
  script:
    - npm run test-ci -- --browser=webkit

.template:publish:tests:
  stage: publish
  before_script:
    - export CI_BUILD_REF=${CI_COMMIT_SHA}
    - export CI_BUILD_REF_NAME=${CI_COMMIT_REF_NAME}
    - export CI_MERGE_REQUEST_IID=${CI_COMMIT_BRANCH#pr_}
    - export COVERALLS_PARALLEL=true
    - export COVERALLS_SERVICE_JOB_ID=${CI_JOB_ID}
    - export COVERALLS_SERVICE_NUMBER=${CI_PIPELINE_ID}
    - apk add --no-cache git
    - npm i -g coveralls

publish:tests:
  extends: .template:publish:tests
  except:
    - /^(staging|saas-[a-zA-Z0-9.]+)$/
  needs:
    - test:unit
  script:
    - export COVERALLS_SERVICE_JOB_NUMBER=unittests
    - export COVERALLS_FLAG_NAME=unittests
    - coveralls < coverage/lcov.info

publish:e2e-tests:
  extends: .template:publish:tests
  only:
    - master
  needs:
    - test:acceptance:enterprise
  script:
    - export COVERALLS_SERVICE_JOB_NUMBER=e2etests
    - export COVERALLS_FLAG_NAME=e2etests
    - sed -i -re 's/(^[SF:]+[../]+)(.*)$/SF:\2/' coverage/lcov.info
    - coveralls < coverage/lcov.info

publish:disclaimer:
  stage: publish
  image: docker:git
  services:
    - docker:19.03.5-dind
  script:
    - docker build -f Dockerfile.disclaimer -t disclaimer .
    - docker run --rm --entrypoint "/bin/sh" -v $(pwd):/extract disclaimer -c "cp disclaimer.txt /extract/"
    - docker image rm disclaimer
  artifacts:
    expire_in: 2w
    paths:
      - disclaimer.txt
  only:
    - /^(master|staging|[0-9]+\.[0-9]+\.x)$/

coveralls:done:
  image: curlimages/curl
  stage: .post
  script:
    - curl "https://coveralls.io/webhook?repo_token=$COVERALLS_REPO_TOKEN" -d "payload[build_num]=$CI_PIPELINE_ID&payload[status]=done"
