'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CopyToClipboard = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createReactClass = require('create-react-class');

var _createReactClass2 = _interopRequireDefault(_createReactClass);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _copyToClipboard = require('copy-to-clipboard');

var _copyToClipboard2 = _interopRequireDefault(_copyToClipboard);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var CopyToClipboard = exports.CopyToClipboard = (0, _createReactClass2.default)({
  propTypes: {
    text: _propTypes2.default.string.isRequired,
    children: _propTypes2.default.element.isRequired,
    onCopy: _propTypes2.default.func,
    options: _propTypes2.default.shape({
      debug: _propTypes2.default.bool,
      message: _propTypes2.default.string
    })
  },

  onClick: function onClick(event) {
    var _props = this.props,
        text = _props.text,
        onCopy = _props.onCopy,
        children = _props.children,
        options = _props.options;


    var elem = _react2.default.Children.only(children);

    var result = (0, _copyToClipboard2.default)(text, options);

    if (onCopy) {
      onCopy(text, result);
    }

    // Bypass onClick if it was present
    if (elem && elem.props && typeof elem.props.onClick === 'function') {
      elem.props.onClick(event);
    }
  },
  render: function render() {
    var _props2 = this.props,
        _text = _props2.text,
        _onCopy = _props2.onCopy,
        _options = _props2.options,
        children = _props2.children,
        props = _objectWithoutProperties(_props2, ['text', 'onCopy', 'options', 'children']);

    var elem = _react2.default.Children.only(children);

    return _react2.default.cloneElement(elem, _extends({}, props, { onClick: this.onClick }));
  }
});
//# sourceMappingURL=Component.js.map