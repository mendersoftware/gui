'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clipPathSupported = clipPathSupported;

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var _clipPathSupported = null;

// Check if clip-path is supported. From http://stackoverflow.com/a/30041538.
function clipPathSupported() {
  if (_clipPathSupported != null) {
    return _clipPathSupported;
  }
  if (typeof document === 'undefined') {
    _clipPathSupported = false;
    return false;
  }

  var base = 'clipPath';
  var prefixes = ['Webkit'];
  var properties = [base].concat(_toConsumableArray(prefixes.map(function (prefix) {
    return prefix + base.charAt(0).toUpperCase() + base.slice(1);
  })));
  var testElement = document.createElement('testelement');
  var attribute = 'polygon(50% 0%, 0% 100%, 100% 100%)';

  // Interate over the properties and see if they pass two tests.
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = properties[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var property = _step.value;

      // First, they need to even support clip-path (IE <= 11 does not)...
      if (testElement.style[property] === '') {
        // Second, we need to see what happens when we try to create a CSS shape...
        testElement.style[property] = attribute;
        if (testElement.style[property] !== '') {
          _clipPathSupported = true;
          return true;
        }
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  _clipPathSupported = false;
  return false;
}